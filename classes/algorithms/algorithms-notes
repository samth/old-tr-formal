Problem set 2:







Problem set 3:

Problem 1:

The optimal substructure is as follows:

A solution for i x j is optimal for i x j-1 with the square adajacent
to the jth pebble excluded.

C[i,j,k] = the max score for the i x j top left portion of the board,
with the kth square in the jth column excluded.

A[i,j] = the matrix of scores

C[i,j,k] = MAX_ l=(1,i) (A[j,l] + C[i,j-1,l])

space/time both n^3

Problem 2:

Problem 3:

Identical to 0-1 knapsack.  But calculation is different.

C[i,j] = max value with weight j and items 1 thru i.

C[i,j] = 

Problem 4:



Problem 5:

Optimal substructure: given an optimal trip, any subtrip divided at a
car change must be optimal.

C[i,j] = the cost to travel from city i to city j as cheaply as possible.  

C[i,j] = MIN_l=(i,j-1) C[i,l] + T[l,j]

Running time: n^3
Space: n^2 

Problem 6:


