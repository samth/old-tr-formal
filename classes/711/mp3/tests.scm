(add-test! 'base 'let*-1 "let* x = 1 y = x x = 2 in +(x,y)" 3)
(add-test! 'base 'let*-2 "let* x = 1 in let* y = 4 x = 2 in +(x,y)" 6)
(add-test! 'base 'let*-3 "let* x = 1 in x" 1)
(add-test! 'base 'let*-4 "let* x = 1 in let x = 2 in x" 2)
(add-test! 'base 'let*-4 "let* x = proc (x,y) +(x,y) y = (x 3 4) in y" 7)
(add-test! 'base 'cond1 "cond true => 2 false => 1 end" 2)
(add-test! 'base 'cond2 "cond false => 2 true => 1 end" 1)
(add-test! 'base 'cond3 "let* x = 0 in cond zero? (+(x,1)) => 2 zero?(x) => 1 end" 1)
(add-test! 'base 'cond4 "let* x = 0 in cond zero? (+(x,1)) => 2 zero?(1) => 1 end" 0)
(add-test! 'base 'cons1 "car cons 3 cons 4 cons 5 nil "  3)
(add-test! 'base 'cons2 "car cdr cons 3 cons 4 cons 5 nil "  4)
(add-test! 'base 'cons3 "nil? cdr cdr cdr cons 3 cons 4 cons 5 nil "  #t)
(add-test! 'base 'cons3 "nil? cons 2 nil "  #f)