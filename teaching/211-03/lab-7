Lab 7

Lab Plans

1/4 lab time - 1 or 2 examples of creating abstractions - a tree structure

Structure: 
(define-struct tree (left right))
A Tree is one of 
- (make-tree Tree Tree)
- Number

Problem:
Create a function tree-map:
Contract: tree-map : (Number -> Number) Tree -> Tree
(define (tree-map f tr) ...)

Extra Problem:
Define fold on trees

3/4 time - using loops
	2 examples w/ plain lists (of posns)
	Figure out the loop to use as a group
	Structre : [list-of posn]
	Problem 1: move all posns 5 to the right
	Problem 2: sum the y coordinates
	Problem 3: find the max of the x coords (tricky)
	
	2 HTML Examples

	Problem 1: create n differnet html pages from a list
		(define (f l) ..)
		f: [list-of Person] -> [list-of webpages]
		(define-struct person (name age job)
		Then another function to write the pages
	Problem 2: create an HTML list from a list of strings:
		(s1 s2 s3 ...) ->
			(ul (li s1)
			    (li s2)
				...
				)
		(define-struct person (name age job hobbies))
		hobbies is list of strings
		Discuss splice boxes
