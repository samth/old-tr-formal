(define case-exp
  '(define (checkExp expAst tenv)
     (let ((expKind (astKind expAst)))
       (case expKind
	 ((kLiteralExp)
	  (let ((litType (getLiteralType (astLiteralExp.literal expAst))))
	    (values expAst litType)))
	 ((kLambdaExp) ...)
	 ((kLetExp) ...)
	 ((kNewArrayExp) ...)
	 ((kNewRecordExp) ...)
	 ((kCaseExp) ...)
	 ((kIfExp) ...)
	 ((kBeginExp) ...)
	 ((kBinOpExp) ...) 
	 ((kUnOpExp) ...)
	 ((kLiteralExp) ...)
	 ((kVarExp) ...)
	 ((kCallExp) ...)
	 ((kFieldExp) ...)
	 ((kArrayExp) ...)
	 (else (begin
		 (errMsg (astPos expAst) "checkExp: as yet unimplemented") (exit 1))))))
)